<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.24.0112.1233                               -->
<workbook original-version='18.1' source-build='2023.3.2 (20233.24.0112.1233)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Orders+ (Sample - Superstore)' inline='true' name='federated.0hh55x90edxvuc1b2hlyj08l9ln2' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='excel-direct.0tek1vs17ootap13dx04g1womud0'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/syama/Dropbox/My PC (LAPTOP-7F436SP0)/Downloads/Sample - Superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='full' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Orders].[Region]' />
              <expression op='[People].[Region]' />
            </expression>
          </clause>
          <relation connection='excel-direct.0tek1vs17ootap13dx04g1womud0' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='string' name='Country' ordinal='8' />
              <column datatype='string' name='City' ordinal='9' />
              <column datatype='string' name='State' ordinal='10' />
              <column datatype='integer' name='Postal Code' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
              <column datatype='string' name='Product ID' ordinal='13' />
              <column datatype='string' name='Category' ordinal='14' />
              <column datatype='string' name='Sub-Category' ordinal='15' />
              <column datatype='string' name='Product Name' ordinal='16' />
              <column datatype='real' name='Sales' ordinal='17' />
              <column datatype='integer' name='Quantity' ordinal='18' />
              <column datatype='real' name='Discount' ordinal='19' />
              <column datatype='real' name='Profit' ordinal='20' />
            </columns>
          </relation>
          <relation connection='excel-direct.0tek1vs17ootap13dx04g1womud0' name='People' table='[People$]' type='table'>
            <columns gridOrigin='A1:B5:no:A1:B5:0' header='yes' outcome='6'>
              <column datatype='string' name='Person' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='full' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Orders].[Region]' />
              <expression op='[People].[Region]' />
            </expression>
          </clause>
          <relation connection='excel-direct.0tek1vs17ootap13dx04g1womud0' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='string' name='Country' ordinal='8' />
              <column datatype='string' name='City' ordinal='9' />
              <column datatype='string' name='State' ordinal='10' />
              <column datatype='integer' name='Postal Code' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
              <column datatype='string' name='Product ID' ordinal='13' />
              <column datatype='string' name='Category' ordinal='14' />
              <column datatype='string' name='Sub-Category' ordinal='15' />
              <column datatype='string' name='Product Name' ordinal='16' />
              <column datatype='real' name='Sales' ordinal='17' />
              <column datatype='integer' name='Quantity' ordinal='18' />
              <column datatype='real' name='Discount' ordinal='19' />
              <column datatype='real' name='Profit' ordinal='20' />
            </columns>
          </relation>
          <relation connection='excel-direct.0tek1vs17ootap13dx04g1womud0' name='People' table='[People$]' type='table'>
            <columns gridOrigin='A1:B5:no:A1:B5:0' header='yes' outcome='6'>
              <column datatype='string' name='Person' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Category]' value='[Orders].[Category]' />
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Country]' value='[Orders].[Country]' />
          <map key='[Customer ID]' value='[Orders].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[Person]' value='[People].[Person]' />
          <map key='[Postal Code]' value='[Orders].[Postal Code]' />
          <map key='[Product ID]' value='[Orders].[Product ID]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Profit]' value='[Orders].[Profit]' />
          <map key='[Quantity]' value='[Orders].[Quantity]' />
          <map key='[Region (People)]' value='[People].[Region]' />
          <map key='[Region]' value='[Orders].[Region]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Sales]' value='[Orders].[Sales]' />
          <map key='[Segment]' value='[Orders].[Segment]' />
          <map key='[Ship Date]' value='[Orders].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[State]' value='[Orders].[State]' />
          <map key='[Sub-Category]' value='[Orders].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9995:no:A1:U9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[People]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B5:no:A1:B5:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_D6C0060EA4284F3B94000C125B38D716]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_D6C0060EA4284F3B94000C125B38D716]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_D6C0060EA4284F3B94000C125B38D716]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_D6C0060EA4284F3B94000C125B38D716]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_D6C0060EA4284F3B94000C125B38D716]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_D6C0060EA4284F3B94000C125B38D716]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_D6C0060EA4284F3B94000C125B38D716]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_D6C0060EA4284F3B94000C125B38D716]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_D6C0060EA4284F3B94000C125B38D716]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_D6C0060EA4284F3B94000C125B38D716]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_D6C0060EA4284F3B94000C125B38D716]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_D6C0060EA4284F3B94000C125B38D716]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_D6C0060EA4284F3B94000C125B38D716]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_D6C0060EA4284F3B94000C125B38D716]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_D6C0060EA4284F3B94000C125B38D716]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_D6C0060EA4284F3B94000C125B38D716]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_D6C0060EA4284F3B94000C125B38D716]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_D6C0060EA4284F3B94000C125B38D716]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_D6C0060EA4284F3B94000C125B38D716]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_D6C0060EA4284F3B94000C125B38D716]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_D6C0060EA4284F3B94000C125B38D716]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Person</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Person]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Person</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_D6C0060EA4284F3B94000C125B38D716]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region (People)]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_D6C0060EA4284F3B94000C125B38D716]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='NEW PROFIT' datatype='real' name='[Calculation_972496106090160128]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[Profit]*[Quantity]' />
      </column>
      <column caption='NEW QUANTITY' datatype='real' name='[Calculation_972496106091073537]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Quantity]-[Quantity]*[Discount]' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_D6C0060EA4284F3B94000C125B38D716]' role='measure' type='quantitative' />
      <column-instance column='[Customer Name Set 2]' derivation='InOut' name='[io:Customer Name Set 2:nk]' pivot='key' type='nominal' />
      <column-instance column='[Customer Name Set]' derivation='InOut' name='[io:Customer Name Set:nk]' pivot='key' type='nominal' />
      <column-instance column='[Set 1]' derivation='InOut' name='[io:Set 1:nk]' pivot='key' type='nominal' />
      <group caption='Customer Name Set 2' name='[Customer Name Set 2]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter expression='SUM([Quantity]) &gt;= 110' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
          <groupfilter function='level-members' level='[Customer Name]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        </groupfilter>
      </group>
      <group caption='Customer Name Set' name='[Customer Name Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter expression='SUM([Sales]) &gt;= 10000.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
          <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
            <groupfilter function='level-members' level='[Customer Name]' />
            <groupfilter function='member' level='[Customer Name]' member='%null%' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Product Name Set 2' name='[Product Name Set 2]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter expression='SUM([Sales]) &gt;= 15000.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
          <groupfilter function='level-members' level='[Product Name]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        </groupfilter>
      </group>
      <group caption='Product Name Set' name='[Product Name Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter expression='SUM([Quantity]) &gt;= 110' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
          <groupfilter function='level-members' level='[Product Name]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
        </groupfilter>
      </group>
      <group caption='UNION' delimiter=',' name='[Set 1]' name-style='unqualified'>
        <groupfilter function='union'>
          <groupfilter field='[Customer Name Set]' function='reference' />
          <groupfilter field='[Customer Name Set 2]' function='reference' />
        </groupfilter>
      </group>
      <group caption='MINUS(LEFT)' delimiter=',' name='[Set 2]' name-style='unqualified'>
        <groupfilter function='except'>
          <groupfilter field='[Customer Name Set]' function='reference' />
          <groupfilter field='[Customer Name Set 2]' function='reference' />
        </groupfilter>
      </group>
      <group caption='MINUS(RIGHT)' delimiter=',' name='[Set 3]' name-style='unqualified'>
        <groupfilter function='except'>
          <groupfilter field='[Customer Name Set 2]' function='reference' />
          <groupfilter field='[Customer Name Set]' function='reference' />
        </groupfilter>
      </group>
      <group caption='INTERSECTION' delimiter=',' name='[Set 4]' name-style='unqualified'>
        <groupfilter function='intersection'>
          <groupfilter field='[Customer Name Set]' function='reference' />
          <groupfilter field='[Customer Name Set 2]' function='reference' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[io:Customer Name Set:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Customer Name Set 2:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Set 1:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>false</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Row ID' />
        <field-sort-custom-order field='Order ID' />
        <field-sort-custom-order field='Order Date' />
        <field-sort-custom-order field='Ship Date' />
        <field-sort-custom-order field='Ship Mode' />
        <field-sort-custom-order field='Customer ID' />
        <field-sort-custom-order field='Customer Name' />
        <field-sort-custom-order field='Segment' />
        <field-sort-custom-order field='Country' />
        <field-sort-custom-order field='City' />
        <field-sort-custom-order field='State' />
        <field-sort-custom-order field='Postal Code' />
        <field-sort-custom-order field='Region' />
        <field-sort-custom-order field='Product ID' />
        <field-sort-custom-order field='Category' />
        <field-sort-custom-order field='Sub-Category' />
        <field-sort-custom-order field='Product Name' />
        <field-sort-custom-order field='Sales' />
        <field-sort-custom-order field='Quantity' />
        <field-sort-custom-order field='Calculation_972496106091073537' />
        <field-sort-custom-order field='Discount' />
        <field-sort-custom-order field='Profit' />
        <field-sort-custom-order field='Calculation_972496106090160128' />
        <field-sort-custom-order field='Person' />
        <field-sort-custom-order field='Region (People)' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_D6C0060EA4284F3B94000C125B38D716'>
            <properties context=''>
              <relation join='full' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[Orders].[Region]' />
                    <expression op='[People].[Region]' />
                  </expression>
                </clause>
                <relation connection='excel-direct.0tek1vs17ootap13dx04g1womud0' name='Orders' table='[Orders$]' type='table'>
                  <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
                    <column datatype='integer' name='Row ID' ordinal='0' />
                    <column datatype='string' name='Order ID' ordinal='1' />
                    <column datatype='date' name='Order Date' ordinal='2' />
                    <column datatype='date' name='Ship Date' ordinal='3' />
                    <column datatype='string' name='Ship Mode' ordinal='4' />
                    <column datatype='string' name='Customer ID' ordinal='5' />
                    <column datatype='string' name='Customer Name' ordinal='6' />
                    <column datatype='string' name='Segment' ordinal='7' />
                    <column datatype='string' name='Country' ordinal='8' />
                    <column datatype='string' name='City' ordinal='9' />
                    <column datatype='string' name='State' ordinal='10' />
                    <column datatype='integer' name='Postal Code' ordinal='11' />
                    <column datatype='string' name='Region' ordinal='12' />
                    <column datatype='string' name='Product ID' ordinal='13' />
                    <column datatype='string' name='Category' ordinal='14' />
                    <column datatype='string' name='Sub-Category' ordinal='15' />
                    <column datatype='string' name='Product Name' ordinal='16' />
                    <column datatype='real' name='Sales' ordinal='17' />
                    <column datatype='integer' name='Quantity' ordinal='18' />
                    <column datatype='real' name='Discount' ordinal='19' />
                    <column datatype='real' name='Profit' ordinal='20' />
                  </columns>
                </relation>
                <relation connection='excel-direct.0tek1vs17ootap13dx04g1womud0' name='People' table='[People$]' type='table'>
                  <columns gridOrigin='A1:B5:no:A1:B5:0' header='yes' outcome='6'>
                    <column datatype='string' name='Person' ordinal='0' />
                    <column datatype='string' name='Region' ordinal='1' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='CALCULATED FIELD 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.0hh55x90edxvuc1b2hlyj08l9ln2' />
          </datasources>
          <datasource-dependencies datasource='federated.0hh55x90edxvuc1b2hlyj08l9ln2'>
            <column caption='NEW PROFIT' datatype='real' name='[Calculation_972496106090160128]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[Profit]*[Quantity]' />
            </column>
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_972496106090160128]' derivation='None' name='[none:Calculation_972496106090160128:nk]' pivot='key' type='ordinal' />
            <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[none:Calculation_972496106090160128:nk]' />
              <lod column='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[sum:Discount:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[sum:Profit:qk]</cols>
      </table>
      <simple-id uuid='{1B788A9D-1D2D-482F-8332-5CFBCDCBE73B}' />
    </worksheet>
    <worksheet name='CALCULATED FIELD 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.0hh55x90edxvuc1b2hlyj08l9ln2' />
          </datasources>
          <datasource-dependencies datasource='federated.0hh55x90edxvuc1b2hlyj08l9ln2'>
            <column caption='NEW QUANTITY' datatype='real' name='[Calculation_972496106091073537]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Quantity]-[Quantity]*[Discount]' />
            </column>
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_972496106091073537]' derivation='Sum' name='[sum:Calculation_972496106091073537:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[sum:Calculation_972496106091073537:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[sum:Profit:qk]</cols>
      </table>
      <simple-id uuid='{9FFC850A-9C7F-46E3-9CA1-9F1A56317468}' />
    </worksheet>
    <worksheet name='HIGH VALUE CUSTOMER BY QUANTITY'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.0hh55x90edxvuc1b2hlyj08l9ln2' />
          </datasources>
          <datasource-dependencies datasource='federated.0hh55x90edxvuc1b2hlyj08l9ln2'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column-instance column='[Customer Name Set 2]' derivation='InOut' name='[io:Customer Name Set 2:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[none:Customer Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[sum:Quantity:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[io:Customer Name Set 2:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[none:Customer Name:nk]</rows>
        <cols>[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[sum:Quantity:qk]</cols>
      </table>
      <simple-id uuid='{A2550CB0-EB7D-4800-9372-6E8F7106989A}' />
    </worksheet>
    <worksheet name='HIGH VALUE CUSTOMERS BY SALE'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.0hh55x90edxvuc1b2hlyj08l9ln2' />
          </datasources>
          <datasource-dependencies datasource='federated.0hh55x90edxvuc1b2hlyj08l9ln2'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Customer Name Set]' derivation='InOut' name='[io:Customer Name Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[io:Customer Name Set:nk]' direction='ASC'>
            <dictionary>
              <bucket>true</bucket>
              <bucket>false</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[none:Customer Name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Sean Miller&quot;</bucket>
              <bucket>&quot;Tamara Chand&quot;</bucket>
              <bucket>&quot;Raymond Buch&quot;</bucket>
              <bucket>&quot;Tom Ashbrook&quot;</bucket>
              <bucket>&quot;Adrian Barton&quot;</bucket>
              <bucket>&quot;Ken Lonsdale&quot;</bucket>
              <bucket>&quot;Sanjit Chand&quot;</bucket>
              <bucket>&quot;Hunter Lopez&quot;</bucket>
              <bucket>&quot;Sanjit Engle&quot;</bucket>
              <bucket>&quot;Christopher Conant&quot;</bucket>
              <bucket>&quot;Todd Sumrall&quot;</bucket>
              <bucket>&quot;Greg Tran&quot;</bucket>
              <bucket>&quot;Becky Martin&quot;</bucket>
              <bucket>&quot;Seth Vernon&quot;</bucket>
              <bucket>&quot;Caroline Jumper&quot;</bucket>
              <bucket>&quot;Clay Ludtke&quot;</bucket>
              <bucket>&quot;Maria Etezadi&quot;</bucket>
              <bucket>&quot;Karen Ferguson&quot;</bucket>
              <bucket>&quot;Bill Shonely&quot;</bucket>
              <bucket>&quot;Edward Hooks&quot;</bucket>
              <bucket>&quot;John Lee&quot;</bucket>
              <bucket>&quot;Grant Thornton&quot;</bucket>
              <bucket>&quot;Helen Wasserman&quot;</bucket>
              <bucket>&quot;Tom Boeckenhauer&quot;</bucket>
              <bucket>&quot;Peter Fuller&quot;</bucket>
              <bucket>&quot;Christopher Martinez&quot;</bucket>
              <bucket>&quot;Justin Deggeller&quot;</bucket>
              <bucket>&quot;Joe Elijah&quot;</bucket>
              <bucket>&quot;Laura Armstrong&quot;</bucket>
              <bucket>&quot;Pete Kriz&quot;</bucket>
              <bucket>&quot;Daniel Raglin&quot;</bucket>
              <bucket>&quot;Natalie Fritzler&quot;</bucket>
              <bucket>&quot;Karen Daniels&quot;</bucket>
              <bucket>&quot;Nick Crebassa&quot;</bucket>
              <bucket>&quot;Harry Marie&quot;</bucket>
              <bucket>&quot;Keith Dawkins&quot;</bucket>
              <bucket>&quot;Sean Braxton&quot;</bucket>
              <bucket>&quot;Zuschuss Carroll&quot;</bucket>
              <bucket>&quot;Joseph Holt&quot;</bucket>
              <bucket>&quot;Nora Preis&quot;</bucket>
              <bucket>&quot;Anna Häberlin&quot;</bucket>
              <bucket>&quot;Adam Bellavance&quot;</bucket>
              <bucket>&quot;Jim Epp&quot;</bucket>
              <bucket>&quot;Jane Waco&quot;</bucket>
              <bucket>&quot;Lena Creighton&quot;</bucket>
              <bucket>&quot;John Murray&quot;</bucket>
              <bucket>&quot;Jonathan Doherty&quot;</bucket>
              <bucket>&quot;Patrick O&apos;Brill&quot;</bucket>
              <bucket>&quot;Maribeth Schnelling&quot;</bucket>
              <bucket>&quot;Rick Wilson&quot;</bucket>
              <bucket>&quot;Brian Moss&quot;</bucket>
              <bucket>&quot;Paul Prost&quot;</bucket>
              <bucket>&quot;Natalie Webber&quot;</bucket>
              <bucket>&quot;Dean percer&quot;</bucket>
              <bucket>&quot;Fred Hopkins&quot;</bucket>
              <bucket>&quot;Rick Huthwaite&quot;</bucket>
              <bucket>&quot;Penelope Sewall&quot;</bucket>
              <bucket>&quot;Brenda Bowman&quot;</bucket>
              <bucket>&quot;Joel Eaton&quot;</bucket>
              <bucket>&quot;Yana Sorensen&quot;</bucket>
              <bucket>&quot;Andy Reiter&quot;</bucket>
              <bucket>&quot;Dan Reichenbach&quot;</bucket>
              <bucket>&quot;Grace Kelly&quot;</bucket>
              <bucket>&quot;Joseph Airdo&quot;</bucket>
              <bucket>&quot;Nathan Mautz&quot;</bucket>
              <bucket>&quot;Valerie Dominguez&quot;</bucket>
              <bucket>&quot;Sarah Brown&quot;</bucket>
              <bucket>&quot;James Galang&quot;</bucket>
              <bucket>&quot;Darrin Martin&quot;</bucket>
              <bucket>&quot;Corinna Mitchell&quot;</bucket>
              <bucket>&quot;Max Jones&quot;</bucket>
              <bucket>&quot;Brosina Hoffman&quot;</bucket>
              <bucket>&quot;Rob Lucas&quot;</bucket>
              <bucket>&quot;William Brown&quot;</bucket>
              <bucket>&quot;Victoria Wilson&quot;</bucket>
              <bucket>&quot;Shirley Daniels&quot;</bucket>
              <bucket>&quot;Quincy Jones&quot;</bucket>
              <bucket>&quot;Alan Dominguez&quot;</bucket>
              <bucket>&quot;Cassandra Brandow&quot;</bucket>
              <bucket>&quot;Greg Maxwell&quot;</bucket>
              <bucket>&quot;Shahid Collister&quot;</bucket>
              <bucket>&quot;Kristen Hastings&quot;</bucket>
              <bucket>&quot;Robert Marley&quot;</bucket>
              <bucket>&quot;Keith Herrera&quot;</bucket>
              <bucket>&quot;Ben Ferrer&quot;</bucket>
              <bucket>&quot;Christine Phan&quot;</bucket>
              <bucket>&quot;Bill Donatelli&quot;</bucket>
              <bucket>&quot;Cindy Stewart&quot;</bucket>
              <bucket>&quot;Anne McFarland&quot;</bucket>
              <bucket>&quot;Ross Baird&quot;</bucket>
              <bucket>&quot;Katherine Murray&quot;</bucket>
              <bucket>&quot;Alex Avila&quot;</bucket>
              <bucket>&quot;Suzanne McNair&quot;</bucket>
              <bucket>&quot;Naresj Patel&quot;</bucket>
              <bucket>&quot;Amy Cox&quot;</bucket>
              <bucket>&quot;Mick Hernandez&quot;</bucket>
              <bucket>&quot;Dennis Pardue&quot;</bucket>
              <bucket>&quot;Emily Phan&quot;</bucket>
              <bucket>&quot;Yoseph Carroll&quot;</bucket>
              <bucket>&quot;Stefania Perrino&quot;</bucket>
              <bucket>&quot;Luke Weiss&quot;</bucket>
              <bucket>&quot;Cathy Prescott&quot;</bucket>
              <bucket>&quot;Thomas Seio&quot;</bucket>
              <bucket>&quot;Tonja Turnell&quot;</bucket>
              <bucket>&quot;Mitch Webber&quot;</bucket>
              <bucket>&quot;Tom Prescott&quot;</bucket>
              <bucket>&quot;Tamara Willingham&quot;</bucket>
              <bucket>&quot;Dianna Wilson&quot;</bucket>
              <bucket>&quot;Mitch Willingham&quot;</bucket>
              <bucket>&quot;Harold Ryan&quot;</bucket>
              <bucket>&quot;Steven Cartwright&quot;</bucket>
              <bucket>&quot;Resi Pölking&quot;</bucket>
              <bucket>&quot;Lena Radford&quot;</bucket>
              <bucket>&quot;Mike Pelletier&quot;</bucket>
              <bucket>&quot;Anna Andreadi&quot;</bucket>
              <bucket>&quot;Ivan Liston&quot;</bucket>
              <bucket>&quot;Kelly Lampkin&quot;</bucket>
              <bucket>&quot;Laurel Beltran&quot;</bucket>
              <bucket>&quot;Dave Hallsten&quot;</bucket>
              <bucket>&quot;Irene Maddox&quot;</bucket>
              <bucket>&quot;Ted Trevino&quot;</bucket>
              <bucket>&quot;Kunst Miller&quot;</bucket>
              <bucket>&quot;Philisse Overcash&quot;</bucket>
              <bucket>&quot;Heather Kirkland&quot;</bucket>
              <bucket>&quot;Anthony Jacobs&quot;</bucket>
              <bucket>&quot;Joe Kamberova&quot;</bucket>
              <bucket>&quot;Alan Hwang&quot;</bucket>
              <bucket>&quot;Dean Katz&quot;</bucket>
              <bucket>&quot;Russell Applegate&quot;</bucket>
              <bucket>&quot;Sue Ann Reed&quot;</bucket>
              <bucket>&quot;Jim Kriz&quot;</bucket>
              <bucket>&quot;Bart Watters&quot;</bucket>
              <bucket>&quot;Tracy Blumstein&quot;</bucket>
              <bucket>&quot;Giulietta Baptist&quot;</bucket>
              <bucket>&quot;Rick Bensley&quot;</bucket>
              <bucket>&quot;Erin Smith&quot;</bucket>
              <bucket>&quot;Deborah Brumfield&quot;</bucket>
              <bucket>&quot;Kean Thornton&quot;</bucket>
              <bucket>&quot;Sample Company A&quot;</bucket>
              <bucket>&quot;Eugene Moren&quot;</bucket>
              <bucket>&quot;Dave Brooks&quot;</bucket>
              <bucket>&quot;Anthony Rawles&quot;</bucket>
              <bucket>&quot;Arthur Gainer&quot;</bucket>
              <bucket>&quot;Anthony Johnson&quot;</bucket>
              <bucket>&quot;Linda Cazamias&quot;</bucket>
              <bucket>&quot;Stewart Carmichael&quot;</bucket>
              <bucket>&quot;Theone Pippenger&quot;</bucket>
              <bucket>&quot;Mark Cousins&quot;</bucket>
              <bucket>&quot;Jamie Kunitz&quot;</bucket>
              <bucket>&quot;Katrina Willman&quot;</bucket>
              <bucket>&quot;Bradley Drucker&quot;</bucket>
              <bucket>&quot;Arianne Irving&quot;</bucket>
              <bucket>&quot;Scot Coram&quot;</bucket>
              <bucket>&quot;Ellis Ballard&quot;</bucket>
              <bucket>&quot;Gary Zandusky&quot;</bucket>
              <bucket>&quot;Steven Roelle&quot;</bucket>
              <bucket>&quot;Natalie DeCherney&quot;</bucket>
              <bucket>&quot;Matt Abelman&quot;</bucket>
              <bucket>&quot;Sung Pak&quot;</bucket>
              <bucket>&quot;Dana Kaydos&quot;</bucket>
              <bucket>&quot;Rick Duston&quot;</bucket>
              <bucket>&quot;Toby Carlisle&quot;</bucket>
              <bucket>&quot;Alan Schoenberger&quot;</bucket>
              <bucket>&quot;Frank Hawley&quot;</bucket>
              <bucket>&quot;Claudia Bergmann&quot;</bucket>
              <bucket>&quot;Tracy Hopkins&quot;</bucket>
              <bucket>&quot;Bill Eplett&quot;</bucket>
              <bucket>&quot;Jill Fjeld&quot;</bucket>
              <bucket>&quot;Gary Hwang&quot;</bucket>
              <bucket>&quot;Roland Schwarz&quot;</bucket>
              <bucket>&quot;Muhammed Yedwab&quot;</bucket>
              <bucket>&quot;Peter McVee&quot;</bucket>
              <bucket>&quot;Stewart Visinsky&quot;</bucket>
              <bucket>&quot;Denise Monton&quot;</bucket>
              <bucket>&quot;Frank Preis&quot;</bucket>
              <bucket>&quot;Susan Pistek&quot;</bucket>
              <bucket>&quot;Craig Molinari&quot;</bucket>
              <bucket>&quot;Michael Paige&quot;</bucket>
              <bucket>&quot;Sean Christensen&quot;</bucket>
              <bucket>&quot;Sanjit Jacobs&quot;</bucket>
              <bucket>&quot;Luke Foster&quot;</bucket>
              <bucket>&quot;Pierre Wener&quot;</bucket>
              <bucket>&quot;George Ashbrook&quot;</bucket>
              <bucket>&quot;Ken Heidel&quot;</bucket>
              <bucket>&quot;Chris Cortes&quot;</bucket>
              <bucket>&quot;Dorothy Badders&quot;</bucket>
              <bucket>&quot;Nora Paige&quot;</bucket>
              <bucket>&quot;Kelly Collister&quot;</bucket>
              <bucket>&quot;Fred Chung&quot;</bucket>
              <bucket>&quot;Bill Stewart&quot;</bucket>
              <bucket>&quot;John Stevenson&quot;</bucket>
              <bucket>&quot;Ruben Ausman&quot;</bucket>
              <bucket>&quot;Annie Thurman&quot;</bucket>
              <bucket>&quot;Olvera Toch&quot;</bucket>
              <bucket>&quot;Rose O&apos;Brian&quot;</bucket>
              <bucket>&quot;Michael Chen&quot;</bucket>
              <bucket>&quot;Michael Moore&quot;</bucket>
              <bucket>&quot;Carol Adams&quot;</bucket>
              <bucket>&quot;Matthew Grinstein&quot;</bucket>
              <bucket>&quot;Maribeth Dona&quot;</bucket>
              <bucket>&quot;Jim Karlsson&quot;</bucket>
              <bucket>&quot;Juliana Krohn&quot;</bucket>
              <bucket>&quot;Frank Merwin&quot;</bucket>
              <bucket>&quot;Scott Cohen&quot;</bucket>
              <bucket>&quot;Hunter Glantz&quot;</bucket>
              <bucket>&quot;Ben Peterman&quot;</bucket>
              <bucket>&quot;Liz Preis&quot;</bucket>
              <bucket>&quot;Christopher Schild&quot;</bucket>
              <bucket>&quot;Ed Braxton&quot;</bucket>
              <bucket>&quot;Jeremy Pistek&quot;</bucket>
              <bucket>&quot;Sam Zeldin&quot;</bucket>
              <bucket>&quot;Rick Hansen&quot;</bucket>
              <bucket>&quot;Thomas Boland&quot;</bucket>
              <bucket>&quot;Gary McGarr&quot;</bucket>
              <bucket>&quot;Dionis Lloyd&quot;</bucket>
              <bucket>&quot;Erica Smith&quot;</bucket>
              <bucket>&quot;Robert Waldorf&quot;</bucket>
              <bucket>&quot;Anna Gayman&quot;</bucket>
              <bucket>&quot;Emily Ducich&quot;</bucket>
              <bucket>&quot;Pauline Webber&quot;</bucket>
              <bucket>&quot;Sarah Foster&quot;</bucket>
              <bucket>&quot;Frank Carlisle&quot;</bucket>
              <bucket>&quot;Sally Hughsby&quot;</bucket>
              <bucket>&quot;Sandra Glassco&quot;</bucket>
              <bucket>&quot;Trudy Schmidt&quot;</bucket>
              <bucket>&quot;Sam Craven&quot;</bucket>
              <bucket>&quot;Victoria Pisteka&quot;</bucket>
              <bucket>&quot;Doug Jacobs&quot;</bucket>
              <bucket>&quot;Dianna Vittorini&quot;</bucket>
              <bucket>&quot;Sylvia Foulston&quot;</bucket>
              <bucket>&quot;Dan Campbell&quot;</bucket>
              <bucket>&quot;Arthur Prichep&quot;</bucket>
              <bucket>&quot;Dennis Kane&quot;</bucket>
              <bucket>&quot;Katharine Harms&quot;</bucket>
              <bucket>&quot;Randy Ferguson&quot;</bucket>
              <bucket>&quot;Rick Reed&quot;</bucket>
              <bucket>&quot;Brian Dahlen&quot;</bucket>
              <bucket>&quot;Brian Stugart&quot;</bucket>
              <bucket>&quot;Rob Williams&quot;</bucket>
              <bucket>&quot;Daniel Lacy&quot;</bucket>
              <bucket>&quot;Damala Kotsonis&quot;</bucket>
              <bucket>&quot;Adam Shillingsburg&quot;</bucket>
              <bucket>&quot;Jack O&apos;Briant&quot;</bucket>
              <bucket>&quot;Adam Hart&quot;</bucket>
              <bucket>&quot;Henry Goldwyn&quot;</bucket>
              <bucket>&quot;Lindsay Castell&quot;</bucket>
              <bucket>&quot;Carol Triggs&quot;</bucket>
              <bucket>&quot;Edward Becker&quot;</bucket>
              <bucket>&quot;Sharelle Roach&quot;</bucket>
              <bucket>&quot;Lindsay Williams&quot;</bucket>
              <bucket>&quot;Ricardo Sperren&quot;</bucket>
              <bucket>&quot;Alejandro Savely&quot;</bucket>
              <bucket>&quot;Mark Packer&quot;</bucket>
              <bucket>&quot;Christine Sundaresam&quot;</bucket>
              <bucket>&quot;Brian Thompson&quot;</bucket>
              <bucket>&quot;Deirdre Greer&quot;</bucket>
              <bucket>&quot;Jeremy Lonsdale&quot;</bucket>
              <bucket>&quot;Greg Matthias&quot;</bucket>
              <bucket>&quot;Janet Martin&quot;</bucket>
              <bucket>&quot;Chloris Kastensmidt&quot;</bucket>
              <bucket>&quot;Karen Bern&quot;</bucket>
              <bucket>&quot;Maxwell Schwartz&quot;</bucket>
              <bucket>&quot;Ruben Dartt&quot;</bucket>
              <bucket>&quot;Tanja Norvell&quot;</bucket>
              <bucket>&quot;Steve Nguyen&quot;</bucket>
              <bucket>&quot;Speros Goranitis&quot;</bucket>
              <bucket>&quot;Katherine Hughes&quot;</bucket>
              <bucket>&quot;Patrick Gardner&quot;</bucket>
              <bucket>&quot;Eugene Hildebrand&quot;</bucket>
              <bucket>&quot;Gary Mitchum&quot;</bucket>
              <bucket>&quot;Eugene Barchas&quot;</bucket>
              <bucket>&quot;Mike Gockenbach&quot;</bucket>
              <bucket>&quot;Toby Gnade&quot;</bucket>
              <bucket>&quot;Kean Takahito&quot;</bucket>
              <bucket>&quot;Shahid Shariari&quot;</bucket>
              <bucket>&quot;Sara Luxemburg&quot;</bucket>
              <bucket>&quot;Aaron Smayling&quot;</bucket>
              <bucket>&quot;Cynthia Arntzen&quot;</bucket>
              <bucket>&quot;Carlos Soltero&quot;</bucket>
              <bucket>&quot;Lindsay Shagiari&quot;</bucket>
              <bucket>&quot;Michelle Huthwaite&quot;</bucket>
              <bucket>&quot;Frank Atkinson&quot;</bucket>
              <bucket>&quot;David Bremer&quot;</bucket>
              <bucket>&quot;Noel Staavos&quot;</bucket>
              <bucket>&quot;Tamara Manning&quot;</bucket>
              <bucket>&quot;Christine Kargatis&quot;</bucket>
              <bucket>&quot;Thea Hudgings&quot;</bucket>
              <bucket>&quot;Liz Thompson&quot;</bucket>
              <bucket>&quot;Becky Castell&quot;</bucket>
              <bucket>&quot;Julie Kriz&quot;</bucket>
              <bucket>&quot;Shaun Weien&quot;</bucket>
              <bucket>&quot;Maris LaWare&quot;</bucket>
              <bucket>&quot;Rob Dowd&quot;</bucket>
              <bucket>&quot;Craig Yedwab&quot;</bucket>
              <bucket>&quot;Neil Ducich&quot;</bucket>
              <bucket>&quot;Meg Tillman&quot;</bucket>
              <bucket>&quot;Barry Französisch&quot;</bucket>
              <bucket>&quot;David Smith&quot;</bucket>
              <bucket>&quot;Paul Van Hugh&quot;</bucket>
              <bucket>&quot;Ionia McGrath&quot;</bucket>
              <bucket>&quot;Chuck Clark&quot;</bucket>
              <bucket>&quot;Craig Carroll&quot;</bucket>
              <bucket>&quot;Arthur Wiediger&quot;</bucket>
              <bucket>&quot;Erin Ashbrook&quot;</bucket>
              <bucket>&quot;Linda Southworth&quot;</bucket>
              <bucket>&quot;Darren Budd&quot;</bucket>
              <bucket>&quot;Justin MacKendrick&quot;</bucket>
              <bucket>&quot;Christina VanderZanden&quot;</bucket>
              <bucket>&quot;Troy Staebel&quot;</bucket>
              <bucket>&quot;Gary Hansen&quot;</bucket>
              <bucket>&quot;Barry Gonzalez&quot;</bucket>
              <bucket>&quot;Trudy Brown&quot;</bucket>
              <bucket>&quot;Robert Dilbeck&quot;</bucket>
              <bucket>&quot;John Castell&quot;</bucket>
              <bucket>&quot;Philip Fox&quot;</bucket>
              <bucket>&quot;Emily Burns&quot;</bucket>
              <bucket>&quot;Chris Selesnick&quot;</bucket>
              <bucket>&quot;Michelle Moray&quot;</bucket>
              <bucket>&quot;Ken Black&quot;</bucket>
              <bucket>&quot;Lauren Leatherbury&quot;</bucket>
              <bucket>&quot;Marc Crier&quot;</bucket>
              <bucket>&quot;John Lucas&quot;</bucket>
              <bucket>&quot;Marina Lichtenstein&quot;</bucket>
              <bucket>&quot;Jay Kimmel&quot;</bucket>
              <bucket>&quot;Justin Ellison&quot;</bucket>
              <bucket>&quot;Bradley Talbott&quot;</bucket>
              <bucket>&quot;Bill Overfelt&quot;</bucket>
              <bucket>&quot;Frank Olsen&quot;</bucket>
              <bucket>&quot;Nicole Hansen&quot;</bucket>
              <bucket>&quot;Richard Bierner&quot;</bucket>
              <bucket>&quot;Eva Jacobs&quot;</bucket>
              <bucket>&quot;Dave Kipp&quot;</bucket>
              <bucket>&quot;Christina Anderson&quot;</bucket>
              <bucket>&quot;Logan Currie&quot;</bucket>
              <bucket>&quot;Ralph Arnett&quot;</bucket>
              <bucket>&quot;Katherine Nockton&quot;</bucket>
              <bucket>&quot;Sean O&apos;Donnell&quot;</bucket>
              <bucket>&quot;Stephanie Ulpright&quot;</bucket>
              <bucket>&quot;Helen Andreada&quot;</bucket>
              <bucket>&quot;Alejandro Grove&quot;</bucket>
              <bucket>&quot;Lena Cacioppo&quot;</bucket>
              <bucket>&quot;Steve Chapman&quot;</bucket>
              <bucket>&quot;Neola Schneider&quot;</bucket>
              <bucket>&quot;Beth Thompson&quot;</bucket>
              <bucket>&quot;Eleni McCrary&quot;</bucket>
              <bucket>&quot;Mary Zewe&quot;</bucket>
              <bucket>&quot;Bruce Stewart&quot;</bucket>
              <bucket>&quot;Deanra Eno&quot;</bucket>
              <bucket>&quot;Corey Catlett&quot;</bucket>
              <bucket>&quot;Ann Chong&quot;</bucket>
              <bucket>&quot;Charles McCrossin&quot;</bucket>
              <bucket>&quot;Herbert Flentye&quot;</bucket>
              <bucket>&quot;Fred McMath&quot;</bucket>
              <bucket>&quot;Julia Barnett&quot;</bucket>
              <bucket>&quot;Joy Smith&quot;</bucket>
              <bucket>&quot;Don Jones&quot;</bucket>
              <bucket>&quot;Amy Hunt&quot;</bucket>
              <bucket>&quot;Patrick O&apos;Donnell&quot;</bucket>
              <bucket>&quot;Nick Zandusky&quot;</bucket>
              <bucket>&quot;Michael Nguyen&quot;</bucket>
              <bucket>&quot;Beth Paige&quot;</bucket>
              <bucket>&quot;Charles Crestani&quot;</bucket>
              <bucket>&quot;Nat Carroll&quot;</bucket>
              <bucket>&quot;Filia McAdams&quot;</bucket>
              <bucket>&quot;Mark Hamilton&quot;</bucket>
              <bucket>&quot;Brendan Sweed&quot;</bucket>
              <bucket>&quot;Valerie Mitchum&quot;</bucket>
              <bucket>&quot;George Zrebassa&quot;</bucket>
              <bucket>&quot;Michelle Arnett&quot;</bucket>
              <bucket>&quot;Bart Pistole&quot;</bucket>
              <bucket>&quot;Matt Collister&quot;</bucket>
              <bucket>&quot;Thea Hendricks&quot;</bucket>
              <bucket>&quot;Marc Harrigan&quot;</bucket>
              <bucket>&quot;David Flashing&quot;</bucket>
              <bucket>&quot;Xylona Preis&quot;</bucket>
              <bucket>&quot;Clytie Kelty&quot;</bucket>
              <bucket>&quot;Jennifer Ferguson&quot;</bucket>
              <bucket>&quot;Cynthia Voltz&quot;</bucket>
              <bucket>&quot;Nick Radford&quot;</bucket>
              <bucket>&quot;Jack Garza&quot;</bucket>
              <bucket>&quot;Andrew Gjertsen&quot;</bucket>
              <bucket>&quot;Craig Leslie&quot;</bucket>
              <bucket>&quot;Maureen Gastineau&quot;</bucket>
              <bucket>&quot;Roland Fjeld&quot;</bucket>
              <bucket>&quot;Elizabeth Moffitt&quot;</bucket>
              <bucket>&quot;Dean Braden&quot;</bucket>
              <bucket>&quot;Chris McAfee&quot;</bucket>
              <bucket>&quot;Michael Kennedy&quot;</bucket>
              <bucket>&quot;Lena Hernandez&quot;</bucket>
              <bucket>&quot;Kristina Nunn&quot;</bucket>
              <bucket>&quot;Jamie Frazer&quot;</bucket>
              <bucket>&quot;Fred Harton&quot;</bucket>
              <bucket>&quot;Craig Carreira&quot;</bucket>
              <bucket>&quot;Bobby Elias&quot;</bucket>
              <bucket>&quot;Kalyca Meade&quot;</bucket>
              <bucket>&quot;Matt Connell&quot;</bucket>
              <bucket>&quot;Justin Hirsh&quot;</bucket>
              <bucket>&quot;Maribeth Yedwab&quot;</bucket>
              <bucket>&quot;Ken Dana&quot;</bucket>
              <bucket>&quot;Tony Sayre&quot;</bucket>
              <bucket>&quot;Jason Gross&quot;</bucket>
              <bucket>&quot;Laurel Workman&quot;</bucket>
              <bucket>&quot;Allen Rosenblatt&quot;</bucket>
              <bucket>&quot;Greg Guthrie&quot;</bucket>
              <bucket>&quot;Nathan Cano&quot;</bucket>
              <bucket>&quot;Mick Crebagga&quot;</bucket>
              <bucket>&quot;Dave Poirier&quot;</bucket>
              <bucket>&quot;Phillip Flathmann&quot;</bucket>
              <bucket>&quot;Maya Herman&quot;</bucket>
              <bucket>&quot;Janet Lee&quot;</bucket>
              <bucket>&quot;Justin Ritter&quot;</bucket>
              <bucket>&quot;Edward Nazzal&quot;</bucket>
              <bucket>&quot;Toby Braunhardt&quot;</bucket>
              <bucket>&quot;Giulietta Weimer&quot;</bucket>
              <bucket>&quot;Bill Tyler&quot;</bucket>
              <bucket>&quot;Pamela Stobb&quot;</bucket>
              <bucket>&quot;Shahid Hopkins&quot;</bucket>
              <bucket>&quot;Kean Nguyen&quot;</bucket>
              <bucket>&quot;Daniel Byrd&quot;</bucket>
              <bucket>&quot;Roy Phan&quot;</bucket>
              <bucket>&quot;Theresa Swint&quot;</bucket>
              <bucket>&quot;Helen Abelman&quot;</bucket>
              <bucket>&quot;Ed Jacobs&quot;</bucket>
              <bucket>&quot;Neoma Murray&quot;</bucket>
              <bucket>&quot;John Dryer&quot;</bucket>
              <bucket>&quot;Clay Rozendal&quot;</bucket>
              <bucket>&quot;Duane Noonan&quot;</bucket>
              <bucket>&quot;Karen Carlisle&quot;</bucket>
              <bucket>&quot;Stefanie Holloman&quot;</bucket>
              <bucket>&quot;Liz Carlisle&quot;</bucket>
              <bucket>&quot;Rob Haberlin&quot;</bucket>
              <bucket>&quot;Trudy Glocke&quot;</bucket>
              <bucket>&quot;Max Ludwig&quot;</bucket>
              <bucket>&quot;Roger Barcio&quot;</bucket>
              <bucket>&quot;Tom Stivers&quot;</bucket>
              <bucket>&quot;Art Ferguson&quot;</bucket>
              <bucket>&quot;Carlos Daly&quot;</bucket>
              <bucket>&quot;Nicole Fjeld&quot;</bucket>
              <bucket>&quot;Denny Joy&quot;</bucket>
              <bucket>&quot;Victoria Brennan&quot;</bucket>
              <bucket>&quot;Harold Pawlan&quot;</bucket>
              <bucket>&quot;Doug Bickford&quot;</bucket>
              <bucket>&quot;Paul Gonzalez&quot;</bucket>
              <bucket>&quot;Nona Balk&quot;</bucket>
              <bucket>&quot;Scott Williamson&quot;</bucket>
              <bucket>&quot;Lisa DeCherney&quot;</bucket>
              <bucket>&quot;Christy Brittain&quot;</bucket>
              <bucket>&quot;Tracy Poddar&quot;</bucket>
              <bucket>&quot;Jas O&apos;Carroll&quot;</bucket>
              <bucket>&quot;Jay Fein&quot;</bucket>
              <bucket>&quot;Max Engle&quot;</bucket>
              <bucket>&quot;Susan Vittorini&quot;</bucket>
              <bucket>&quot;Katherine Ducich&quot;</bucket>
              <bucket>&quot;Giulietta Dortch&quot;</bucket>
              <bucket>&quot;Sheri Gordon&quot;</bucket>
              <bucket>&quot;Lisa Ryan&quot;</bucket>
              <bucket>&quot;Shaun Chance&quot;</bucket>
              <bucket>&quot;Brooke Gillingham&quot;</bucket>
              <bucket>&quot;Stephanie Phelps&quot;</bucket>
              <bucket>&quot;Nat Gilpin&quot;</bucket>
              <bucket>&quot;Cynthia Delaney&quot;</bucket>
              <bucket>&quot;Skye Norling&quot;</bucket>
              <bucket>&quot;Patrick Ryan&quot;</bucket>
              <bucket>&quot;Ashley Jarboe&quot;</bucket>
              <bucket>&quot;Pamela Coakley&quot;</bucket>
              <bucket>&quot;Emily Grady&quot;</bucket>
              <bucket>&quot;Pauline Johnson&quot;</bucket>
              <bucket>&quot;Noah Childs&quot;</bucket>
              <bucket>&quot;Janet Molinari&quot;</bucket>
              <bucket>&quot;Jennifer Braxton&quot;</bucket>
              <bucket>&quot;Andrew Allen&quot;</bucket>
              <bucket>&quot;Chad Cunningham&quot;</bucket>
              <bucket>&quot;Darrin Sayre&quot;</bucket>
              <bucket>&quot;Monica Federle&quot;</bucket>
              <bucket>&quot;Aaron Hawkins&quot;</bucket>
              <bucket>&quot;Logan Haushalter&quot;</bucket>
              <bucket>&quot;Ben Wallace&quot;</bucket>
              <bucket>&quot;Valerie Takahito&quot;</bucket>
              <bucket>&quot;Adrian Hane&quot;</bucket>
              <bucket>&quot;Mike Vittorini&quot;</bucket>
              <bucket>&quot;Jessica Myrick&quot;</bucket>
              <bucket>&quot;Brad Eason&quot;</bucket>
              <bucket>&quot;Denny Blanton&quot;</bucket>
              <bucket>&quot;Julie Prescott&quot;</bucket>
              <bucket>&quot;Tracy Zic&quot;</bucket>
              <bucket>&quot;Becky Pak&quot;</bucket>
              <bucket>&quot;Darren Koutras&quot;</bucket>
              <bucket>&quot;Meg O&apos;Connel&quot;</bucket>
              <bucket>&quot;Ryan Akin&quot;</bucket>
              <bucket>&quot;Katrina Edelman&quot;</bucket>
              <bucket>&quot;Cathy Armstrong&quot;</bucket>
              <bucket>&quot;Candace McMahon&quot;</bucket>
              <bucket>&quot;Jennifer Patt&quot;</bucket>
              <bucket>&quot;Chad McGuire&quot;</bucket>
              <bucket>&quot;Cindy Chapman&quot;</bucket>
              <bucket>&quot;Erica Bern&quot;</bucket>
              <bucket>&quot;Anne Pryor&quot;</bucket>
              <bucket>&quot;Annie Zypern&quot;</bucket>
              <bucket>&quot;Maurice Satty&quot;</bucket>
              <bucket>&quot;Tim Brockman&quot;</bucket>
              <bucket>&quot;Craig Reiter&quot;</bucket>
              <bucket>&quot;Alan Haines&quot;</bucket>
              <bucket>&quot;Benjamin Farhat&quot;</bucket>
              <bucket>&quot;Cyma Kinney&quot;</bucket>
              <bucket>&quot;Mike Caudle&quot;</bucket>
              <bucket>&quot;James Lanier&quot;</bucket>
              <bucket>&quot;Karl Braun&quot;</bucket>
              <bucket>&quot;George Bell&quot;</bucket>
              <bucket>&quot;Odella Nelson&quot;</bucket>
              <bucket>&quot;Mark Van Huff&quot;</bucket>
              <bucket>&quot;Maria Bertelson&quot;</bucket>
              <bucket>&quot;Brian DeCherney&quot;</bucket>
              <bucket>&quot;Cathy Hwang&quot;</bucket>
              <bucket>&quot;Bruce Degenhardt&quot;</bucket>
              <bucket>&quot;Benjamin Venier&quot;</bucket>
              <bucket>&quot;Kelly Andreada&quot;</bucket>
              <bucket>&quot;Ann Blume&quot;</bucket>
              <bucket>&quot;John Grady&quot;</bucket>
              <bucket>&quot;Dan Lawera&quot;</bucket>
              <bucket>&quot;Zuschuss Donatelli&quot;</bucket>
              <bucket>&quot;Charlotte Melton&quot;</bucket>
              <bucket>&quot;Laurel Elliston&quot;</bucket>
              <bucket>&quot;Ted Butterfield&quot;</bucket>
              <bucket>&quot;Parhena Norris&quot;</bucket>
              <bucket>&quot;Ralph Kennedy&quot;</bucket>
              <bucket>&quot;Bradley Nguyen&quot;</bucket>
              <bucket>&quot;Delfina Latchford&quot;</bucket>
              <bucket>&quot;Philip Brown&quot;</bucket>
              <bucket>&quot;Andy Gerbode&quot;</bucket>
              <bucket>&quot;Raymond Messe&quot;</bucket>
              <bucket>&quot;Paul Knutson&quot;</bucket>
              <bucket>&quot;Tamara Dahlen&quot;</bucket>
              <bucket>&quot;Julia West&quot;</bucket>
              <bucket>&quot;Mick Brown&quot;</bucket>
              <bucket>&quot;Thomas Thornton&quot;</bucket>
              <bucket>&quot;Christine Abelman&quot;</bucket>
              <bucket>&quot;Roger Demir&quot;</bucket>
              <bucket>&quot;Nancy Lomonaco&quot;</bucket>
              <bucket>&quot;Jill Stevenson&quot;</bucket>
              <bucket>&quot;Paul MacIntyre&quot;</bucket>
              <bucket>&quot;Guy Armstrong&quot;</bucket>
              <bucket>&quot;Cyra Reiten&quot;</bucket>
              <bucket>&quot;Nathan Gelder&quot;</bucket>
              <bucket>&quot;Jeremy Ellison&quot;</bucket>
              <bucket>&quot;Troy Blackwell&quot;</bucket>
              <bucket>&quot;Frank Gastineau&quot;</bucket>
              <bucket>&quot;Don Miller&quot;</bucket>
              <bucket>&quot;Gene Hale&quot;</bucket>
              <bucket>&quot;Sarah Bern&quot;</bucket>
              <bucket>&quot;Liz MacKendrick&quot;</bucket>
              <bucket>&quot;Maureen Gnade&quot;</bucket>
              <bucket>&quot;Sarah Jordon&quot;</bucket>
              <bucket>&quot;Bryan Mills&quot;</bucket>
              <bucket>&quot;Barry Franz&quot;</bucket>
              <bucket>&quot;Saphhira Shifley&quot;</bucket>
              <bucket>&quot;Dario Medina&quot;</bucket>
              <bucket>&quot;Michelle Tran&quot;</bucket>
              <bucket>&quot;Shirley Jackson&quot;</bucket>
              <bucket>&quot;Magdelene Morse&quot;</bucket>
              <bucket>&quot;Sibella Parks&quot;</bucket>
              <bucket>&quot;Matt Collins&quot;</bucket>
              <bucket>&quot;Eileen Kiefer&quot;</bucket>
              <bucket>&quot;Corey-Lock&quot;</bucket>
              <bucket>&quot;Denny Ordway&quot;</bucket>
              <bucket>&quot;Hallie Redmond&quot;</bucket>
              <bucket>&quot;Georgia Rosenberg&quot;</bucket>
              <bucket>&quot;Cari Sayre&quot;</bucket>
              <bucket>&quot;Paul Stevenson&quot;</bucket>
              <bucket>&quot;Stuart Van&quot;</bucket>
              <bucket>&quot;Doug O&apos;Connell&quot;</bucket>
              <bucket>&quot;Carl Ludwig&quot;</bucket>
              <bucket>&quot;Liz Willingham&quot;</bucket>
              <bucket>&quot;Michelle Ellison&quot;</bucket>
              <bucket>&quot;Gene McClure&quot;</bucket>
              <bucket>&quot;Steve Carroll&quot;</bucket>
              <bucket>&quot;Matt Hagelstein&quot;</bucket>
              <bucket>&quot;Elpida Rittenbach&quot;</bucket>
              <bucket>&quot;Tony Chapman&quot;</bucket>
              <bucket>&quot;Joni Wasserman&quot;</bucket>
              <bucket>&quot;Michael Grace&quot;</bucket>
              <bucket>&quot;Nora Pelletier&quot;</bucket>
              <bucket>&quot;Patrick Jones&quot;</bucket>
              <bucket>&quot;Erica Hernandez&quot;</bucket>
              <bucket>&quot;Jack Lebron&quot;</bucket>
              <bucket>&quot;Christina DeMoss&quot;</bucket>
              <bucket>&quot;Michael Dominguez&quot;</bucket>
              <bucket>&quot;Dorothy Wardle&quot;</bucket>
              <bucket>&quot;Evan Bailliet&quot;</bucket>
              <bucket>&quot;Benjamin Patterson&quot;</bucket>
              <bucket>&quot;Debra Catini&quot;</bucket>
              <bucket>&quot;Alyssa Tate&quot;</bucket>
              <bucket>&quot;Jim Radford&quot;</bucket>
              <bucket>&quot;Duane Benoit&quot;</bucket>
              <bucket>&quot;Claire Gute&quot;</bucket>
              <bucket>&quot;Kimberly Carter&quot;</bucket>
              <bucket>&quot;Ross DeVincentis&quot;</bucket>
              <bucket>&quot;Carl Weiss&quot;</bucket>
              <bucket>&quot;Jim Sink&quot;</bucket>
              <bucket>&quot;Darrin Van Huff&quot;</bucket>
              <bucket>&quot;Alan Barnes&quot;</bucket>
              <bucket>&quot;Tony Molinari&quot;</bucket>
              <bucket>&quot;Jesus Ocampo&quot;</bucket>
              <bucket>&quot;Scot Wooten&quot;</bucket>
              <bucket>&quot;Jeremy Farry&quot;</bucket>
              <bucket>&quot;Dennis Bolton&quot;</bucket>
              <bucket>&quot;David Wiener&quot;</bucket>
              <bucket>&quot;Cindy Schnelling&quot;</bucket>
              <bucket>&quot;Pauline Chand&quot;</bucket>
              <bucket>&quot;David Philippe&quot;</bucket>
              <bucket>&quot;Jenna Caffey&quot;</bucket>
              <bucket>&quot;Phillina Ober&quot;</bucket>
              <bucket>&quot;Allen Armold&quot;</bucket>
              <bucket>&quot;Vivek Sundaresam&quot;</bucket>
              <bucket>&quot;Alex Russell&quot;</bucket>
              <bucket>&quot;Darren Powers&quot;</bucket>
              <bucket>&quot;Duane Huffman&quot;</bucket>
              <bucket>&quot;Susan MacKendrick&quot;</bucket>
              <bucket>&quot;Eudokia Martin&quot;</bucket>
              <bucket>&quot;Theresa Coyne&quot;</bucket>
              <bucket>&quot;Mike Kennedy&quot;</bucket>
              <bucket>&quot;Tiffany House&quot;</bucket>
              <bucket>&quot;Sean Wendt&quot;</bucket>
              <bucket>&quot;Luke Schmidt&quot;</bucket>
              <bucket>&quot;Randy Bradley&quot;</bucket>
              <bucket>&quot;Lynn Smith&quot;</bucket>
              <bucket>&quot;Bruce Geld&quot;</bucket>
              <bucket>&quot;Victor Preis&quot;</bucket>
              <bucket>&quot;Ken Brennan&quot;</bucket>
              <bucket>&quot;Barry Pond&quot;</bucket>
              <bucket>&quot;Toby Swindell&quot;</bucket>
              <bucket>&quot;Russell D&apos;Ascenzo&quot;</bucket>
              <bucket>&quot;Aimee Bixby&quot;</bucket>
              <bucket>&quot;Roy Collins&quot;</bucket>
              <bucket>&quot;Sung Shariari&quot;</bucket>
              <bucket>&quot;Jonathan Howell&quot;</bucket>
              <bucket>&quot;Jason Fortune-&quot;</bucket>
              <bucket>&quot;Rachel Payne&quot;</bucket>
              <bucket>&quot;Bryan Spruell&quot;</bucket>
              <bucket>&quot;Roy Französisch&quot;</bucket>
              <bucket>&quot;Eric Barreto&quot;</bucket>
              <bucket>&quot;Maureen Fritzler&quot;</bucket>
              <bucket>&quot;Eric Murdock&quot;</bucket>
              <bucket>&quot;Alyssa Crouse&quot;</bucket>
              <bucket>&quot;Evan Henry&quot;</bucket>
              <bucket>&quot;Mary O&apos;Rourke&quot;</bucket>
              <bucket>&quot;Alejandro Ballentine&quot;</bucket>
              <bucket>&quot;Katrina Bavinger&quot;</bucket>
              <bucket>&quot;Catherine Glotzbach&quot;</bucket>
              <bucket>&quot;Sonia Cooley&quot;</bucket>
              <bucket>&quot;Joni Blumstein&quot;</bucket>
              <bucket>&quot;Henia Zydlo&quot;</bucket>
              <bucket>&quot;Aaron Bergman&quot;</bucket>
              <bucket>&quot;Ryan Crowe&quot;</bucket>
              <bucket>&quot;Chad Sievert&quot;</bucket>
              <bucket>&quot;Harold Engle&quot;</bucket>
              <bucket>&quot;Sally Knutson&quot;</bucket>
              <bucket>&quot;Richard Eichhorn&quot;</bucket>
              <bucket>&quot;Jim Mitchum&quot;</bucket>
              <bucket>&quot;Jocasta Rupert&quot;</bucket>
              <bucket>&quot;Art Foster&quot;</bucket>
              <bucket>&quot;Julie Creighton&quot;</bucket>
              <bucket>&quot;Michael Stewart&quot;</bucket>
              <bucket>&quot;Vicky Freymann&quot;</bucket>
              <bucket>&quot;Vivek Gonzalez&quot;</bucket>
              <bucket>&quot;Charles Sheldon&quot;</bucket>
              <bucket>&quot;Todd Boyes&quot;</bucket>
              <bucket>&quot;Ann Steele&quot;</bucket>
              <bucket>&quot;Erica Hackney&quot;</bucket>
              <bucket>&quot;Thomas Brumley&quot;</bucket>
              <bucket>&quot;Alice McCarthy&quot;</bucket>
              <bucket>&quot;Brendan Murry&quot;</bucket>
              <bucket>&quot;David Kendrick&quot;</bucket>
              <bucket>&quot;Matthew Clasen&quot;</bucket>
              <bucket>&quot;Beth Fritzler&quot;</bucket>
              <bucket>&quot;Harry Greene&quot;</bucket>
              <bucket>&quot;Michael Granlund&quot;</bucket>
              <bucket>&quot;Muhammed MacIntyre&quot;</bucket>
              <bucket>&quot;Sandra Flanagan&quot;</bucket>
              <bucket>&quot;Steven Ward&quot;</bucket>
              <bucket>&quot;Liz Pelletier&quot;</bucket>
              <bucket>&quot;Dorris liebe&quot;</bucket>
              <bucket>&quot;Ivan Gibson&quot;</bucket>
              <bucket>&quot;Barry Blumstein&quot;</bucket>
              <bucket>&quot;Tracy Collins&quot;</bucket>
              <bucket>&quot;Michelle Lonsdale&quot;</bucket>
              <bucket>&quot;Ritsa Hightower&quot;</bucket>
              <bucket>&quot;Patrick Bzostek&quot;</bucket>
              <bucket>&quot;Angele Hood&quot;</bucket>
              <bucket>&quot;Henry MacAllister&quot;</bucket>
              <bucket>&quot;Patricia Hirasaki&quot;</bucket>
              <bucket>&quot;Pete Armstrong&quot;</bucket>
              <bucket>&quot;Jennifer Jackson&quot;</bucket>
              <bucket>&quot;Julia Dunbar&quot;</bucket>
              <bucket>&quot;Peter Bühler&quot;</bucket>
              <bucket>&quot;Eric Hoffmann&quot;</bucket>
              <bucket>&quot;Toby Ritter&quot;</bucket>
              <bucket>&quot;Alex Grayson&quot;</bucket>
              <bucket>&quot;Berenike Kampe&quot;</bucket>
              <bucket>&quot;Bryan Davis&quot;</bucket>
              <bucket>&quot;Anna Chung&quot;</bucket>
              <bucket>&quot;Anthony Witt&quot;</bucket>
              <bucket>&quot;Lori Olson&quot;</bucket>
              <bucket>&quot;Joy Bell-&quot;</bucket>
              <bucket>&quot;Carol Darley&quot;</bucket>
              <bucket>&quot;Mathew Reese&quot;</bucket>
              <bucket>&quot;Astrea Jones&quot;</bucket>
              <bucket>&quot;Ralph Ritter&quot;</bucket>
              <bucket>&quot;Shirley Schmidt&quot;</bucket>
              <bucket>&quot;Bobby Trafton&quot;</bucket>
              <bucket>&quot;Barbara Fisher&quot;</bucket>
              <bucket>&quot;Maria Zettner&quot;</bucket>
              <bucket>&quot;Denise Leinenbach&quot;</bucket>
              <bucket>&quot;Alan Shonely&quot;</bucket>
              <bucket>&quot;Brian Derr&quot;</bucket>
              <bucket>&quot;Neil Knudson&quot;</bucket>
              <bucket>&quot;Carlos Meador&quot;</bucket>
              <bucket>&quot;Chuck Sachs&quot;</bucket>
              <bucket>&quot;Cari Schnelling&quot;</bucket>
              <bucket>&quot;John Huston&quot;</bucket>
              <bucket>&quot;Rob Beeghly&quot;</bucket>
              <bucket>&quot;Andy Yotov&quot;</bucket>
              <bucket>&quot;Corey Roper&quot;</bucket>
              <bucket>&quot;MaryBeth Skach&quot;</bucket>
              <bucket>&quot;Joni Sundaresam&quot;</bucket>
              <bucket>&quot;Erin Creighton&quot;</bucket>
              <bucket>&quot;Khloe Miller&quot;</bucket>
              <bucket>&quot;Kelly Williams&quot;</bucket>
              <bucket>&quot;Tim Taslimi&quot;</bucket>
              <bucket>&quot;Shui Tom&quot;</bucket>
              <bucket>&quot;Vivek Grady&quot;</bucket>
              <bucket>&quot;Sonia Sunley&quot;</bucket>
              <bucket>&quot;Brad Thomas&quot;</bucket>
              <bucket>&quot;Mark Haberlin&quot;</bucket>
              <bucket>&quot;Barry Weirich&quot;</bucket>
              <bucket>&quot;Joy Daniels&quot;</bucket>
              <bucket>&quot;Jason Klamczynski&quot;</bucket>
              <bucket>&quot;Vivian Mathis&quot;</bucket>
              <bucket>&quot;Neil Französisch&quot;</bucket>
              <bucket>&quot;Melanie Seite&quot;</bucket>
              <bucket>&quot;Lycoris Saunders&quot;</bucket>
              <bucket>&quot;Aleksandra Gannaway&quot;</bucket>
              <bucket>&quot;Evan Minnotte&quot;</bucket>
              <bucket>&quot;Heather Jas&quot;</bucket>
              <bucket>&quot;Don Weiss&quot;</bucket>
              <bucket>&quot;Larry Tron&quot;</bucket>
              <bucket>&quot;Brendan Dodson&quot;</bucket>
              <bucket>&quot;Lisa Hazard&quot;</bucket>
              <bucket>&quot;Jennifer Halladay&quot;</bucket>
              <bucket>&quot;Jill Matthias&quot;</bucket>
              <bucket>&quot;Chuck Magee&quot;</bucket>
              <bucket>&quot;Larry Hughes&quot;</bucket>
              <bucket>&quot;Sung Chung&quot;</bucket>
              <bucket>&quot;Stuart Calhoun&quot;</bucket>
              <bucket>&quot;Nicole Brennan&quot;</bucket>
              <bucket>&quot;Bart Folk&quot;</bucket>
              <bucket>&quot;Dorothy Dickinson&quot;</bucket>
              <bucket>&quot;Brad Norvell&quot;</bucket>
              <bucket>&quot;Andrew Roberts&quot;</bucket>
              <bucket>&quot;Harold Dahlen&quot;</bucket>
              <bucket>&quot;Sally Matthias&quot;</bucket>
              <bucket>&quot;Paul Lucas&quot;</bucket>
              <bucket>&quot;Guy Phonely&quot;</bucket>
              <bucket>&quot;Erin Mull&quot;</bucket>
              <bucket>&quot;Guy Thornton&quot;</bucket>
              <bucket>&quot;Robert Barroso&quot;</bucket>
              <bucket>&quot;Hilary Holden&quot;</bucket>
              <bucket>&quot;Allen Goldenen&quot;</bucket>
              <bucket>&quot;Joel Jenkins&quot;</bucket>
              <bucket>&quot;Anthony Garverick&quot;</bucket>
              <bucket>&quot;Muhammed Lee&quot;</bucket>
              <bucket>&quot;Anthony O&apos;Donnell&quot;</bucket>
              <bucket>&quot;Pete Takahito&quot;</bucket>
              <bucket>&quot;Dianna Arnett&quot;</bucket>
              <bucket>&quot;Michael Oakman&quot;</bucket>
              <bucket>&quot;Greg Hansen&quot;</bucket>
              <bucket>&quot;Phillip Breyer&quot;</bucket>
              <bucket>&quot;Bobby Odegard&quot;</bucket>
              <bucket>&quot;Ed Ludwig&quot;</bucket>
              <bucket>&quot;Clay Cheatham&quot;</bucket>
              <bucket>&quot;Roland Murray&quot;</bucket>
              <bucket>&quot;Karen Seio&quot;</bucket>
              <bucket>&quot;Anemone Ratner&quot;</bucket>
              <bucket>&quot;Fred Wasserman&quot;</bucket>
              <bucket>&quot;Jasper Cacioppo&quot;</bucket>
              <bucket>&quot;Adrian Shami&quot;</bucket>
              <bucket>&quot;Larry Blacks&quot;</bucket>
              <bucket>&quot;Ricardo Emerson&quot;</bucket>
              <bucket>&quot;Susan Gilcrest&quot;</bucket>
              <bucket>&quot;Roy Skaria&quot;</bucket>
              <bucket>&quot;Mitch Gastineau&quot;</bucket>
              <bucket>&quot;Carl Jackson&quot;</bucket>
              <bucket>&quot;Lela Donovan&quot;</bucket>
              <bucket>&quot;Thais Sissman&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[io:Customer Name Set:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[none:Customer Name:nk]</rows>
        <cols>[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{807D3631-411A-4C9C-AF08-A4A4BF106A60}' />
    </worksheet>
    <worksheet name='INTERSECTION'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.0hh55x90edxvuc1b2hlyj08l9ln2' />
          </datasources>
          <datasource-dependencies datasource='federated.0hh55x90edxvuc1b2hlyj08l9ln2'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Set 4]' derivation='InOut' name='[io:Set 4:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[none:Customer Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[io:Set 4:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[io:Set 4:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[sum:Quantity:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[io:Set 4:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[none:Customer Name:nk]</rows>
        <cols>([federated.0hh55x90edxvuc1b2hlyj08l9ln2].[sum:Sales:qk] + [federated.0hh55x90edxvuc1b2hlyj08l9ln2].[sum:Quantity:qk])</cols>
      </table>
      <simple-id uuid='{A627CBCE-D520-43B1-BFBF-795AA66C4FFD}' />
    </worksheet>
    <worksheet name='MINUS(LEFT)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.0hh55x90edxvuc1b2hlyj08l9ln2' />
          </datasources>
          <datasource-dependencies datasource='federated.0hh55x90edxvuc1b2hlyj08l9ln2'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Set 2]' derivation='InOut' name='[io:Set 2:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[none:Customer Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[io:Set 2:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[io:Set 2:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[sum:Quantity:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[io:Set 2:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[none:Customer Name:nk]</rows>
        <cols>([federated.0hh55x90edxvuc1b2hlyj08l9ln2].[sum:Sales:qk] + [federated.0hh55x90edxvuc1b2hlyj08l9ln2].[sum:Quantity:qk])</cols>
      </table>
      <simple-id uuid='{B33AD2F4-4686-4F0B-AB6F-0D72F44891F3}' />
    </worksheet>
    <worksheet name='MINUS(RIGHT)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>MINUS(RIGHT)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.0hh55x90edxvuc1b2hlyj08l9ln2' />
          </datasources>
          <datasource-dependencies datasource='federated.0hh55x90edxvuc1b2hlyj08l9ln2'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Set 3]' derivation='InOut' name='[io:Set 3:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[none:Customer Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[io:Set 3:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[io:Set 3:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[sum:Quantity:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[io:Set 3:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[none:Customer Name:nk]</rows>
        <cols>([federated.0hh55x90edxvuc1b2hlyj08l9ln2].[sum:Sales:qk] + [federated.0hh55x90edxvuc1b2hlyj08l9ln2].[sum:Quantity:qk])</cols>
      </table>
      <simple-id uuid='{C8D9145D-1AE1-4B0C-B6F5-E4965044EE65}' />
    </worksheet>
    <worksheet name='PERCENTILE'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.0hh55x90edxvuc1b2hlyj08l9ln2' />
          </datasources>
          <datasource-dependencies datasource='federated.0hh55x90edxvuc1b2hlyj08l9ln2'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcrk:sum:Sales:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[yr:Order Date:ok]' ordering-type='Field' rank-options='Competition,Ascending' type='PctRank' />
            </column-instance>
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[pcrk:sum:Sales:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[sum:Sales:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[:Measure Names]' value='322' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[yr:Order Date:ok]' value='196' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[yr:Order Date:ok]</rows>
        <cols>[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{8EBBC6E9-DDDB-446D-B800-82A7C5759547}' />
    </worksheet>
    <worksheet name='RANK'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.0hh55x90edxvuc1b2hlyj08l9ln2' />
          </datasources>
          <datasource-dependencies datasource='federated.0hh55x90edxvuc1b2hlyj08l9ln2'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[rank:sum:Quantity:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[rank:sum:Quantity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[sum:Quantity:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[:Measure Names]' value='303' />
            <format attr='height' field='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[yr:Order Date:ok]' value='27' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[yr:Order Date:ok]' value='164' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[yr:Order Date:ok]</rows>
        <cols>[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{186447C3-FB95-4CC6-AEFE-D67E5DE337AE}' />
    </worksheet>
    <worksheet name='RUNNING TOTAL'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.0hh55x90edxvuc1b2hlyj08l9ln2' />
          </datasources>
          <datasource-dependencies datasource='federated.0hh55x90edxvuc1b2hlyj08l9ln2'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[cum:sum:Profit:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Columns' type='CumTotal' />
            </column-instance>
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[cum:sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[sum:Profit:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[:Measure Names]' value='395' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[yr:Order Date:ok]' value='216' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[yr:Order Date:ok]</rows>
        <cols>[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{AD479EF2-B867-4D6E-9153-0371FD5FD365}' />
    </worksheet>
    <worksheet name='TOP PERFORMING PRODUCTS BY QUANTITY'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.0hh55x90edxvuc1b2hlyj08l9ln2' />
          </datasources>
          <datasource-dependencies datasource='federated.0hh55x90edxvuc1b2hlyj08l9ln2'>
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column-instance column='[Product Name Set]' derivation='InOut' name='[io:Product Name Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[none:Product Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[sum:Quantity:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[io:Product Name Set:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[none:Product Name:nk]</rows>
        <cols>[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[sum:Quantity:qk]</cols>
      </table>
      <simple-id uuid='{3AC081B7-10E0-4BF6-ADBA-0B57BF2DCC5A}' />
    </worksheet>
    <worksheet name='TOP PERFORMING PRODUCTS BY SALES'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.0hh55x90edxvuc1b2hlyj08l9ln2' />
          </datasources>
          <datasource-dependencies datasource='federated.0hh55x90edxvuc1b2hlyj08l9ln2'>
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Product Name Set 2]' derivation='InOut' name='[io:Product Name Set 2:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[none:Product Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[io:Product Name Set 2:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[none:Product Name:nk]</rows>
        <cols>[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{6B4FD478-B2C8-4430-B8F5-159DC0DE9C6C}' />
    </worksheet>
    <worksheet name='UNION'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.0hh55x90edxvuc1b2hlyj08l9ln2' />
          </datasources>
          <datasource-dependencies datasource='federated.0hh55x90edxvuc1b2hlyj08l9ln2'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Set 1]' derivation='InOut' name='[io:Set 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[none:Customer Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[io:Set 1:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[io:Set 1:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[sum:Quantity:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[io:Set 1:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[none:Customer Name:nk]</rows>
        <cols>([federated.0hh55x90edxvuc1b2hlyj08l9ln2].[sum:Sales:qk] + [federated.0hh55x90edxvuc1b2hlyj08l9ln2].[sum:Quantity:qk])</cols>
      </table>
      <simple-id uuid='{F7EDC1F7-790F-4190-B170-618881B272BF}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='HIGH VALUE CUSTOMERS BY SALE'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[io:Customer Name Set:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[io:Customer Name Set:nk]</field>
            <field>[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A348B8D6-3E73-45A1-A3FC-A27FC1C1809E}' />
    </window>
    <window class='worksheet' name='HIGH VALUE CUSTOMER BY QUANTITY'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[io:Customer Name Set 2:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[io:Customer Name Set 2:nk]</field>
            <field>[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8FA30A41-AC04-41D2-A0D6-9455D7F5D9F6}' />
    </window>
    <window class='worksheet' name='UNION'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[io:Set 1:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[Set 1]</field>
            <field>[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[io:Set 1:nk]</field>
            <field>[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BFD44991-999D-4409-BA8D-C16189482D27}' />
    </window>
    <window class='worksheet' name='MINUS(LEFT)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[io:Set 2:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[io:Set 2:nk]</field>
            <field>[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B13018E3-90C6-4B04-A0D3-0EC502B46254}' />
    </window>
    <window class='worksheet' name='MINUS(RIGHT)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[io:Set 3:nk]</field>
            <field>[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7AD4617D-876F-4D2A-9257-3ED99400F143}' />
    </window>
    <window class='worksheet' name='INTERSECTION'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[io:Set 4:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[io:Set 4:nk]</field>
            <field>[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7B8E02B1-9CE8-4C13-BEDD-99997375B763}' />
    </window>
    <window class='worksheet' name='TOP PERFORMING PRODUCTS BY QUANTITY'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[io:Product Name Set:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[io:Product Name Set:nk]</field>
            <field>[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[none:Product Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CF4B0BB6-8E4C-41A0-A042-0F1EC9F48BF4}' />
    </window>
    <window class='worksheet' name='TOP PERFORMING PRODUCTS BY SALES'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[io:Product Name Set 2:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[io:Product Name Set 2:nk]</field>
            <field>[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[none:Product Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B26214BA-28AD-42EF-A73C-DBA8835E0655}' />
    </window>
    <window class='worksheet' name='CALCULATED FIELD 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[none:Calculation_972496106090160128:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[none:Calculation_972496106090160128:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F5295C2F-11F2-4CCF-92FC-54BA3E302776}' />
    </window>
    <window class='worksheet' name='CALCULATED FIELD 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[sum:Calculation_972496106091073537:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{93D63AF6-8616-4300-A0B2-B90D96168C0B}' />
    </window>
    <window class='worksheet' name='RUNNING TOTAL'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F59A77C5-A92A-417E-B930-1DC65D440820}' />
    </window>
    <window class='worksheet' name='RANK'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{74DC586F-C31B-4AC4-BD41-79037633BB84}' />
    </window>
    <window class='worksheet' maximized='true' name='PERCENTILE'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hh55x90edxvuc1b2hlyj08l9ln2].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E0E95561-EB10-4C2B-82DF-7A416FEE2242}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='87' name='CALCULATED FIELD 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAABXCAYAAABSv0r8AAAACXBIWXMAABJ0AAASdAHeZh94
      AAAHrUlEQVR4nO3cf0zU9x3H8ae7yr4VDj3iIj86e7qSMhAEjTWxWSUpocOaaEwXlMJigxmI
      XS+paZahEcHp3ATN9Q/1wg9vWaT+WguF7JKLbJi1gdUwaBRKMqc3Koxpy/GjR29lN/cHjeU4
      Tu5UuEs/70dy/3zuvp/vi7vv674/7o4F9+7du4cQivpOqAMIEUpSAKE0KYBQmhRAKE0KIJQm
      BRBKkwIIpc1agPHx8fnI8UjGxsZCHeGBwj0fqJtR9gBCaVIAobQnAnnQ2IlVc53DR/7d/fO+
      TqEe2QMIpUkBhNKkAEJpUgChNCmAUJoUQChNCiCUJgUQSpMCCKVJAYTSpABCaVIAoTQpgFDa
      gtn+Mdb4+DiLFi2arzwPZWxsDL1eH+oYfoV7PlA3o+wBhNIC2gMI8W0V0A9iwv0QKNwP08I9
      H6ibUQ6BhNKkAEJpUgChNCmAUNqsV4GE+DaTPYBQmhRAKE0KIJQmBRBKkwIIpUkBhNJ0Bw8e
      PBjMAq4bNqqr3qb2QiP29j4WPJ1CYkzENw/oqqWiM56NiVFTlhrEfuQQrfoNrImN8JlzRhN3
      uFpfydHGL1mzMZGo6fe7bmCrruLt2gs02tvpW/A0KYkxfDN7F7UVncRPW3bQfoRDrXo2rIkl
      wCQzRLvKJctpan5/nvfet9HykYOFiRmsXKwLi3y4PuWD92qps9bzzh8aaW62c+X65xieTSYh
      MkwyehmitXIvv/5dB0+s24jXpjPHGQP6MtyUWTGbO0nbe4xi40ImHDaOV5nR7SslO9bfQh4G
      bHW0LNvBgfTIAFYywZ2r5zh19jqG9O/7bviTQbCbzXSm7eVYsZGFEw5sx6sw6/ZR6j8IngEb
      dS3L2HEgnUCSzOjv59lf82825JVw1BSHppvA+UkTp35bTdSxEtZrIc4HeG7+lY+1F9lV9ixx
      eg2dx82//naOU4eq+V+YZJzK1VaPbelWXhpvn3bP3GcM4hDIQ89lO9F5JjYbNXTo0IybMeVF
      Y7/cg8dvGDvW1njyXw3wCRu8wvu9Sfzs6BHe+PEPeHKmOXsuY4/Ow7TZiKYDnWZksymPaPtl
      evwHwW5tJT7/VQLqoT/6H2E68gZbVseh6QAWYvjhNjalf8z13jDIB+hSX2HPltU8pdfQAeg0
      4tYVsCU1fDLe52rjTEMU+dvTfF7r+cgYRAH66O02sjbDe9bIjLUYu3vp8xPGVtOC8bUCUrUA
      VxObxa6CdcRpOr8P6evtxrg2w7tQkRmsNXbTO3MQBmw1tBhfoyDgIP7yxRPvE83FF1/EYFgc
      Bvn88fTxz76VGJeHU0YXbWcaiMrfPuP2MR8ZgyjACE53DIbp82oGYtxORmYIc6vxJO2r9pCb
      5H9jfhgjTjcxvkEwxLhx+gbBc6uRk+2r2JObxONNAuDixrtmmqJyeWlF+OXzuMe43fsnrL+q
      4e7LhWTGhE9GV8dZbFH5bPezsc5HxuDOAQwGlvgMLsFg8B7pbyijqAHQ1lNSuWIONjoDBt8g
      LPENQtlkENaXVLLiMQfxjF7j0olauhML2bczdco7VRjkG7RRUdZAP8CSVeQWl7JxReSU1yLE
      GV0dnG2M4Celqfh/r577jMFdBnU6GfYZHMbp9B5J2FqOxWLm9YweLjbd8nt+8PCcOH2DMOwb
      hHKLBfPrGfRcbOLWYwviYfRaPeUH3oVtFZTlpRLt9aSHOh8Qm8MBiwXLSTOVP3+B/7RU8ovf
      2Bm4v45QZnTRda6ZqLzZDo3nPmMQBViMQRvC6Z427HYypBlY7PN4jdSCN3m+9zTWLlfgqwkk
      iUFjyDcIziHt/nG4V5LUAt58vpfT1i4eRxJXl5XDTRo/PVxGbmq0zx4u1Pm86DT0T60mZ9d+
      ilf+mfq/jIQ+490P+eNHA1w5UUJRUdHXtzIa+vtpKCuiqKiWrnnKGEQBlpOU4qCj03tqV2cH
      jpQkls+0iC6enOIcnLVm7IOBr2nWJEkpODo6vf9IVycdjhSSZg5CfE4xOc5azI8axNXGmXdg
      h2kbz/i5yhDSfH7pWPTkdxkeGQl9xu9lU2qxYPG6lbM1IYGt5RYslkLS5yljEAXQkZyVzWi9
      mWaHGw8e3I5mzPWjZGcl+z/Oj8lkd+EyWupsU3a/j0aXnEX2aD3mZgduD3jcDprN9YxmZ5Hs
      PwiZuwtZ1lKH7RGCjFz9kKHMlx94iS2U+QCuXTrG+Q9ucsc1MTngcfP5JzYutP6XNWkJYZEx
      EPORMbiT4NhsTCYP1uq3KPnsKyKWprHJZHrAh2CTItN3Yrp9mOPWOMoLH/x5wKCtgrKGfq+x
      yRMc4LndWArTgViyTSY81mreKvmMryKWkrbJhGn2IOw03ebwcStx5YUPdS27z3GT/ravT/Kn
      eW63hcJ0QpoPIOmFTP5x8TxVlz5l+EsPEIHeuJqc4l/y4v0zxNBmDMzcZ5RfhAmlyZfhhNKk
      AEJpUgChNCmAUJoUQChNCiCUJgUQSpMCCKVJAYTSpABCaVIAoTQpgFCaFEAoTQoglCYFEEqT
      AgilSQGE0qQAQmlSAKE0KYBQmhRAKE0KIJQmBRBKkwIIpUkBhNKkAEJpUgChNCmAUJoUQChN
      CiCUJgUQSpMCCKVJAYTSpABCaVIAobT/AyLUB2B2ArobAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='87' name='CALCULATED FIELD 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='HIGH VALUE CUSTOMER BY QUANTITY' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='HIGH VALUE CUSTOMERS BY SALE' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='INTERSECTION' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='MINUS(LEFT)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='MINUS(RIGHT)' width='192'>
      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
    </thumbnail>
    <thumbnail height='108' name='PERCENTILE' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAABsCAYAAAA8Ar2SAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAKoklEQVR4nO3de1SUdR7H8XcrlAKyR9drppituWbH3J0pkcRJPE152czoZDHmBfYsmZli
      4WVN3OyQii5aqEfzkpgUlJCsYqUHEm9pghm72nqJhFQYMDsRM+gMnGf/AHWYuIzz0HrY3/f1
      H8/8eH7Pc87zmef3XH7zvU3TNA0hFPWbW70BQtxKEgChNAmAUJoEQChNAiCUJgEQSpMACKVJ
      AITSJABCaRIAoTQJgFCaBEAoTQIglCYBEEqTAAilSQCE0iQAQmkSAKE0CYBQmgRAKE0CIJQm
      ARBKkwAIpUkAhNIkAEJpEgChNAmAUJpPcw3y8vL+F9shxC1xm/w4rlCZDIGE0iQAQmkSAKE0
      fQFwfM/+5DgizaEYjUaMQ4bzfFwaBRWujaopyVl8vU2oOZLFOSVUN7S6sjySZ45hiCWZokY7
      rebk6qdq+zNaSG68oRDN0hGAC6RNjWDpVz2Ysu4zDuflcShzGcZvlxE9Jx1rXSvbocVMnr2X
      nnMzOZx3mMy5Pdk7ezKLD9lurMrxPXsWP8eIsTFsOFKKs6lui1KI39qVebGjvd90IeroOgP0
      tGwkY2U0oXf74QPc3sXIk+Z+OI8WcAoAKzs3ZVIRNovZYR3xwYeOYbOZFVZB5qad10NS9PFb
      fNw2ki3ZyfylT1M9WklfspaqCdMZ213PlgtRS0cAehASdi+311tWjbWkBHx9ah8w2PL58jiE
      PDIU/+tt/Bn6SAgc/5L8upNA0PjlrIl5lLv92jTZo23fGlafMjNz8n3NP8AQwgMteBHs4HRa
      DAu2VTHgpYmEAFwqpxQICPCv19I/IAAopfzSTay+Op818bvpN+1Fhvk331wIT7TMF6njNGmz
      Z7HyCAyOTSZhfFDt8itV2Bv9JztVVzztoJrCLYmk+U9gy9iuujdXiGt0B6C6MJ2YqYs53jGc
      +IxYwrq7rLJtO/wa/U8/2rX1sBNrJsvWlzB66WTuk7GPaEH6DqeiFKIsKygNXcSHb46iu/va
      OnWmG1BZaQOXqwBbZSXQjc6dPOzm0wyOOitglokst8+Swo0kjU4k7/Vh3u+HUJaOANj4bPUq
      TrQbTeLCBg5+AH8DDw2ClXsPYBv1WF0EbBzYewgGzcTg4Vg+aFIKeZPcFu5biHHWWaanpzAp
      yPu9EGrTcRGcz6EcJ77DH2viorQrYyLHEpiTSMKeMhw4KNuTQGJOIGMjxyCjeXGreX8GKPqO
      s4Az82WMme4f9rv+zewfMo/NCcuYvySckHlVtOs4kFEJm4kNuZaaIpIt4SSdcv3/JMKNSbVr
      mp5OinzFi1+JvA4tlCYvwwmlSQCE0iQAQmkSAKG0Zu8C2e2Nv8wgRGsnZwChNAmAUJoEQChN
      AiCUpu9tUMcFDn30Lu99uI8TP14B3/b0Gx7JjJfDuT/wWqMaSnNX8Hribk78eIW2HQZgnrWQ
      GFM33Od/OcqP8dHyN9l0aRzvbrTQy/XDi2lEP7uab9y3oW80W93bCuEhHQG4SHrMFD4IeJZZ
      b29ncJAfNeXH2DB3JjPifPhg5Vi6APbDy3lhwRc8+EYaq0yBVOQuYcqCF6hJeJ85wXWzBRwX
      yHn7NZZ8cgG4grN3A90Vn+MsfYneuhGLHO2ihegaAvV4Zg3vL40kJMiPNsDtnf/EmLC+OI/9
      mzMAlPHJ1ix+Nk0nxtSBNrShgymG6aafydr6CWV16ynesYad7Z5n/Y53mNS74b4uFhXipA+9
      5eAXLUhHAO4k2PR7t0nxNZRbreDrUzu8sR8nvwAGhw5xmRnmx5DQwVCQz/G6Rwy9wuNJnBZG
      kF/jm2MtvQB396SH9xssxC+04ARDB2fT/8Yb26voP+05ggEulWMF+vjXnxjp5+8PFNZOivfo
      G/0nrBer4LsNTBy2AYC2HQYwbOJUpj05kA5N/5iEEI1qoUnxZ0lfMJc1eWCcsY43wuuO6qtX
      mpwUf+Wqpx38lseXZvP4tT9r7BTlJvFa/EtMOZvA+3OCm5h7LETjdN8GrTmXyavPRLKuLJi4
      lDSWhrsMi+5o2+Sk+LZ3eNlpGz+CwuYwf3w3Lmd9xtEaL9cjlKfvDFCcxotRq7GGvMaWv5vp
      5j4U6dSZroDNZgeXKNhtNqCrx5PiG/OHAQ8AhZy/gIdDKSHq03EGsJO9/h2+afcYsfMaOPgB
      /AZhGAhH9n/hMhSy88X+IzDQwCCPxy0VVFT8cul/TnwNvvdyjxz8wks6AvAVh3Od+IaO4OFG
      D+QujJwwmva5SazIKceBg/KcFSTltmf0hJF08bivf5H09BSW7zpJuQPAQfmxd1iR9gP9I8fz
      oPc7IRTX7JzgRl+HLk4hasK6uvv97lwfWDX3JLiYlKgJrGt4RfSN3spGSw/sRbm8+9Ymdn1d
      zM/OurtA0a8we5T7rVghPOd9AIT4PyAvwwmlSQCE0iQAQmkSAKE0+WU4oTQ5AwilSQCE0iQA
      Qmmtq1B2RQFpcc8zfIgRo3EIw59+kRX7yhpqKYRnNK+d11Ijh2qjZ6zV9hXaNKemaVetR7WV
      EQYt+IVtWmldq8qDizSzwazFZf+gOTWn9kN2nGY2mLVFBytvrOpqsbb7zWe1ocFDtaHBBs0Q
      sVk7595d5UFtkdmgmWP/qRXanJqmXdV+OrNPW7v9uPe7IJSnKwAHs09pV92WntscoRkMcVqu
      pmmaVqqlRhm04NhPtRuHe6X2aWywZohKvR6Sc6mvaFMTd2uFtm+1zRENB+DU2nGaYdwq7YTT
      +y0Wwl0rKZR9kj07i7lnzEipEilaVOsolF1dysUSCCzfT1ykmVCjEaMxlCdfTXa73hDi5rRM
      ABynSZv5FJNWfkf/2GTWW1q4UPaF7zkHXLJ35Jn47Xyel8fh3W/zaPlaoqenNHzBLIQHdAeg
      ujCd6X+OYJX1YeIztrNyvMuwqKUKZQcEEAjcZxrJ/d398AF8Ov6RaXMm0OlEKjtP6tsHoS59
      AShKIcqymNMPLOLD9+bVrxIPboWyb7jZQtn8rjd9AqHgm9P1l/sHEEgJZZ4OpYRwoyMANwpl
      z2+mUPahvQewufxfbaHshzwulA0PYDIHUpL9OSddHiBUW0sooR99pIqq8FIrKZTtw0NTpvFg
      yVYWrthPmQOqL3/FutWZVJksjJMACC95/zZoUTKW8CRONfjhjULZtU+ClzF/yS4KLtcVyp4b
      T2xY97rfZGmoULbLmlwKZVeX5LBs/hJ2FVymyrc9/Z9YQEJsWMNnHyE8IK9DC6XJy3BCaRIA
      oTQJgFCaBEAoTQplC6XJGUAoTQIglCYBEEqTAAiltY5C2U3+FHt/pqWuY/yduvZEKKp1FMru
      ZWHjPovbwjNsiohic0czw+XgF15qNYWy3dXk7yDjvC+mcTdTaUaI+lpNoez6KshOz6LiLgsT
      R0iBVOG9Fp0UfzZ9Tm2h7L/WL5Tt32ChbKvnk+LdndnG5gNOBoaPoa++jRaKayWFsl3VkL8j
      g/O+JqJGyuBH6KM7ADXnMpkz8x8UdHiCuJQYTK71Un+NQtn2vWzPquAuy0Rk9CP0anWFss+k
      biTXOZAZY2TwI/RrJYWy69TksyPjPL6mccjoR7SEVlIou5Z973ayKu7CMnFEE0MrITzXSgpl
      9+LGg68ZbFsVLvf+RYuQQtlCafIynFDafwFv7eOS36zo0QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='132' name='RANK' width='192'>
      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
      TXPjwotr95oAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='108' name='RUNNING TOTAL' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='TOP PERFORMING PRODUCTS BY QUANTITY' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='TOP PERFORMING PRODUCTS BY SALES' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='UNION' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
